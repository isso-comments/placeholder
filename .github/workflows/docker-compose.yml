name: E2E tests with docker

on:
  push:
    paths:
      - "isso/**"
      - "package.json"
      - "docker/**"
      - "Dockerfile"
      - ".github/workflows/docker-compose.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TESTBED_IMAGE: "ghcr.io/isso-comments/isso-js-testbed:latest"
    steps:
      - uses: actions/checkout@v2

      - name: Switch testbed image to ${{ env.TESTBED_IMAGE }}
        # Just for faster CI runs, instead of re-building the image every time
        # Especially useful to save the time+bandwidth to re-download puppeteer & chromium
        run: |
          sed -i "s|isso-js-testbed|${{ env.TESTBED_IMAGE }}|g" docker-compose.yml
          # Also remove the `build`: section so image is pulled, not built
          sed -i '/container_name: isso-client/{n;N;N;d}' docker-compose.yml

      - name: Pull testbed from ${{ env.TESTBED_IMAGE }}
        run: docker pull ${{ env.TESTBED_IMAGE }}

      - name: Build the stack
        run: docker compose build isso-server

      - name: Bring up containers
        run: docker compose up -d

      - name: Client unit tests
        run: |
          docker run \
          --mount type=bind,source=${{ github.workspace }}/package.json,target=/src/package.json,readonly \
          --mount type=bind,source=${{ github.workspace }}/isso/js/,target=/src/isso/js/,readonly \
          ${{ env.TESTBED_IMAGE }} npm run test-unit

      - name: Client integration tests
        run: |
          docker run \
          --mount type=bind,source=${{ github.workspace }}/package.json,target=/src/package.json,readonly \
          --mount type=bind,source=${{ github.workspace }}/isso/js/,target=/src/isso/js/,readonly \
          --env ISSO_ENDPOINT='http://isso-dev.local:8080' \
          --network container:isso-server \
          ${{ env.TESTBED_IMAGE }} npm run test-integration
